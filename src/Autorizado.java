


import complementos.apiAutorizados;
import complementos.apiSubir;
import complementos.consultasBD;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Desarrollo
 */
public class Autorizado extends javax.swing.JFrame {

    // pantalla=1 viene de modificar //pantalla!=1 viene de pantalla agregar
    /**
     * Creates new form Autorizado
     */
    public static String param;
    public static Integer pantalla;
    consultasBD consultas=new consultasBD();
    Integer id_empresa=consultas.getIdEmpresa();
    public Integer id_autorizados=null;
    public File fichero=null;
    apiSubir subirImg=new apiSubir();
    CapturaUnaHuella vistaCH=null;
    apiAutorizados apiautorizados=new apiAutorizados();
    Documentos vdoc=null;
    public Autorizado() {
        initComponents();
        //System.out.println("parametro: "+param);
        this.setLocationRelativeTo(null);
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_foto, "src/images/camera.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_guardar, "src/images/save.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_doc, "src/images/add-doc.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_huella, "src/images/finger-scanner.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_nuevo, "src/images/clear.png");
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_btnfoto, "src/images/anadir.png");
        txt_codigo.setText(param);
        limpiarDirectorio();
        if(pantalla==1)
        {
            actualizarTabla();
        }
        
    }
    public void actualizarTabla()
    {
        if(apiautorizados.getAutorizados(param).getBoolean("success"))
        {
            DefaultTableModel modelo = (DefaultTableModel)tb_autorizados.getModel();
           JSONArray arrayAu = apiautorizados.getAutorizados(param).getJSONArray("respuesta");
           for (int i=0;i<arrayAu.length();i++){
                        //resCli = arrayAu.getJSONObject(i);    
                        JSONObject obj=arrayAu.getJSONObject(i);
                        String nombre=obj.getString("nombre")+" "+obj.getString("a_paterno")+" "+obj.getString("a_materno");
                        String estatus=obj.getString("nom_estatus");
                        Integer id=obj.getInt("idautorizados");
                        Object [] fila = new Object[3];
                        fila[0] = id;
                        fila[1] = nombre;
                        fila[2] = estatus;
                        modelo.addRow ( fila );
                        System.out.println("autorizados:"+obj);
                }
            
        }
        else
        {
            cuadroDialogo("Error al consultar Autorizados");
            
        }
         
    }
    public void limpiarDirectorio()
    {
        File directorio = new File("src/tmp");
        File[] ficheros = directorio.listFiles();
        for(int i=0;i<ficheros.length;i++)
        {
            ficheros[i].delete();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_btnfoto = new javax.swing.JLabel();
        lbl_huella = new javax.swing.JLabel();
        lbl_guardar = new javax.swing.JLabel();
        lbl_doc = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_paterno = new javax.swing.JTextField();
        txt_materno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_comentario = new javax.swing.JTextArea();
        lbl_foto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_guardar = new javax.swing.JButton();
        btn_huellas = new javax.swing.JButton();
        btn_documentos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_autorizados = new javax.swing.JTable();
        txt_id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lbl_nuevo = new javax.swing.JLabel();
        btn_nuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Autorizados");
        setPreferredSize(new java.awt.Dimension(700, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_btnfoto.setText("jLabel7");
        getContentPane().add(lbl_btnfoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 30, 30));

        lbl_huella.setText("jLabel7");
        getContentPane().add(lbl_huella, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 30, 30));

        lbl_guardar.setText("jLabel7");
        getContentPane().add(lbl_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, 30, 30));

        lbl_doc.setText("jLabel7");
        getContentPane().add(lbl_doc, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 30, 30));

        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nombreKeyReleased(evt);
            }
        });
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 53, 130, 30));

        txt_paterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_paternoKeyReleased(evt);
            }
        });
        getContentPane().add(txt_paterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 53, 130, 30));

        txt_materno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_maternoKeyReleased(evt);
            }
        });
        getContentPane().add(txt_materno, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 89, 130, 30));

        jLabel1.setText("Apellido Materno:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 89, -1, 30));

        jLabel2.setText("Comentarios:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 70, 30));

        jLabel3.setText("Apellido Paterno:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 100, 30));

        jLabel4.setText("Nombre:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 50, 30));

        txt_comentario.setColumns(20);
        txt_comentario.setRows(5);
        txt_comentario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_comentarioKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txt_comentario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 89, 210, -1));

        lbl_foto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(lbl_foto, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 53, 80, 80));

        jButton1.setText("Foto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, 50, 50));

        jLabel5.setText("Codigo:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 5, -1, 30));

        txt_codigo.setEditable(false);
        getContentPane().add(txt_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 5, 130, 30));

        btn_guardar.setText("guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 50, 50));

        btn_huellas.setText("huella");
        btn_huellas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huellasActionPerformed(evt);
            }
        });
        getContentPane().add(btn_huellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, 50, 50));

        btn_documentos.setText("doc");
        btn_documentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_documentosActionPerformed(evt);
            }
        });
        getContentPane().add(btn_documentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 50, 50));

        tb_autorizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Estatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_autorizados);
        if (tb_autorizados.getColumnModel().getColumnCount() > 0) {
            tb_autorizados.getColumnModel().getColumn(0).setMinWidth(30);
            tb_autorizados.getColumnModel().getColumn(0).setPreferredWidth(30);
            tb_autorizados.getColumnModel().getColumn(0).setMaxWidth(50);
            tb_autorizados.getColumnModel().getColumn(2).setMinWidth(60);
            tb_autorizados.getColumnModel().getColumn(2).setPreferredWidth(60);
            tb_autorizados.getColumnModel().getColumn(2).setMaxWidth(60);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 217, -1, 222));

        txt_id.setEditable(false);
        getContentPane().add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 5, 130, 30));

        jLabel6.setText("ID:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, 24));

        lbl_nuevo.setText("jLabel7");
        getContentPane().add(lbl_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 30, 30));

        btn_nuevo.setText("nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btn_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, 50, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyReleased
        // TODO add your handling code here:
        txt_nombre.setText(txt_nombre.getText().toUpperCase());
    }//GEN-LAST:event_txt_nombreKeyReleased

    private void txt_paternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paternoKeyReleased
        // TODO add your handling code here:
        txt_paterno.setText(txt_paterno.getText().toUpperCase());
    }//GEN-LAST:event_txt_paternoKeyReleased

    private void txt_maternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_maternoKeyReleased
        // TODO add your handling code here:
        txt_materno.setText(txt_materno.getText().toUpperCase());
    }//GEN-LAST:event_txt_maternoKeyReleased

    private void txt_comentarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_comentarioKeyReleased
        // TODO add your handling code here:
        txt_comentario.setText(txt_comentario.getText().toUpperCase());
    }//GEN-LAST:event_txt_comentarioKeyReleased

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // TODO add your handling code here:
        if(txt_nombre.getText().equalsIgnoreCase(""))
        {
            cuadroDialogo("Ingrese nombre");
            txt_nombre.requestFocus();
        }
        else
        {
            String nombre=txt_nombre.getText()+" "+txt_paterno.getText()+" "+txt_materno.getText();
             DefaultTableModel modelo = (DefaultTableModel)tb_autorizados.getModel(); 
            if(txt_paterno.getText().equalsIgnoreCase(""))
            {
                cuadroDialogo("Ingrese Apellido Paterno");
                txt_paterno.requestFocus();
            }
            else
            {
                if(txt_materno.getText().equalsIgnoreCase(""))
                {
                    cuadroDialogo("Ingrese Apellido Materno");
                    txt_materno.requestFocus();
                }
                else
                {
                    if(fichero==null)
                    {
                        //cuadroDialogo("sin foto cargada");
                               
                        //guardarAutorizadoAync(false);
                        id_autorizados=apiautorizados.insertAutorizados(crearJsonAutorizado("", false));
                        txt_id.setText(""+id_autorizados);
                        
                        Object [] fila = new Object[3];
                        fila[0] = id_autorizados;
                        fila[1] = nombre;
                        fila[2] = "ACTIVO";
                        modelo.addRow ( fila );
                    }
                    else
                    {
                        try {
                            //subir imagen primero
                            JSONObject json=subirImg.subirImg(fichero);
                            if(json.getBoolean("success"))
                            {
                                //cuadroDialogo(json.getString("nombre"));
                                
                                id_autorizados=apiautorizados.insertAutorizados(crearJsonAutorizado(json.getString("nombre"), true));
                                txt_id.setText(""+id_autorizados);
                           
                                 Object [] fila = new Object[3];
                                 fila[0] = id_autorizados;
                                 fila[1] = nombre;
                                 fila[2] = "ACTIVO";
                                 modelo.addRow ( fila );
                            }
                            else
                            {
                                
                                cuadroDialogo("Problemas al guardar imagen");
                            }
                            //guardarAutorizadoAync(true);
                        } catch (IOException ex) {
                            Logger.getLogger(Autorizado.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    
                }
            }
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
        JFileChooser fc=new JFileChooser();
        fc.setFileFilter(filtroImagen);
        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion=fc.showOpenDialog(this);
              //Si el usuario, pincha en aceptar
        if(seleccion==JFileChooser.APPROVE_OPTION){
            //Seleccionamos el fichero
            fichero=fc.getSelectedFile();                                 
            //System.out.println(fichero.getName());
            //Ecribe la ruta del fichero seleccionado en el campo de texto  
            rsscalelabel.RSScaleLabel.setScaleLabel(lbl_foto, fichero.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_huellasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huellasActionPerformed
        // TODO add your handling code here:
        if(id_autorizados==null)
        {
            cuadroDialogo("Falta Guardar Cliente Autorizado");
        }
        else
        {
            if(vistaCH!=null)
            {
               if(vistaCH.isShowing())
            {
                cuadroDialogo("Ventana Abierta");
                vistaCH.requestFocus();
            }
            else
            {
                vistaCH.codigo=param;
                vistaCH.nombre=txt_nombre.getText().trim();
                vistaCH.id_autorizados=id_autorizados;
                vistaCH.pantalla=1;
                vistaCH=new CapturaUnaHuella();
                vistaCH.setVisible(true);
            } 
            }
            else
            {
                vistaCH.codigo=param;
                vistaCH.nombre=txt_nombre.getText().trim();
                vistaCH.id_autorizados=id_autorizados;
                vistaCH.pantalla=1;
                vistaCH=new CapturaUnaHuella();
                vistaCH.setVisible(true);
            }
            
            
        }
        
    }//GEN-LAST:event_btn_huellasActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        // TODO add your handling code here:
        txt_id.setText("");
        txt_comentario.setText("");
        txt_materno.setText("");
        txt_paterno.setText("");
        txt_nombre.setText("");
        fichero=null;
        id_autorizados=null;
        rsscalelabel.RSScaleLabel.setScaleLabel(lbl_foto, "src/images/camera.png");
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        System.out.println(pantalla);
        if(pantalla==1)
        {
            this.setVisible(false);
            ModificarAutorizados mvista=null;
            mvista.cod_macro=txt_codigo.getText().toUpperCase();
            mvista.pantalla=1;
            mvista=new ModificarAutorizados();
            mvista.setVisible(true);
            System.out.println("si vista modificar");
        }
        else
        {
            System.out.println("no vista modificar");
         home vhome=new home();
        vhome.setVisible(true);  
        }
        
    }//GEN-LAST:event_formWindowClosed

    private void btn_documentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_documentosActionPerformed
        // TODO add your handling code here:
        
        if(vdoc!=null)
        {
            if(vdoc.isShowing())
            {
                cuadroDialogo("Ventana abierta");
                vdoc.requestFocus();
            }
            else
            {
                vdoc.codigoMacro=param;
                vdoc=new Documentos();
                vdoc.setVisible(true);
            }
        }
        else
        {
           vdoc.codigoMacro=param;
            vdoc=new Documentos();
            vdoc.setVisible(true); 
        }
            
    }//GEN-LAST:event_btn_documentosActionPerformed
    public JSONObject crearJsonAutorizado(String foto,boolean val)
    {
        JSONObject autorizados = new JSONObject();
        try {
            autorizados.put("nombre",txt_nombre.getText().trim());
            autorizados.put("a_paterno", txt_paterno.getText().trim());
            autorizados.put("a_materno",txt_materno.getText().trim());
            autorizados.put("comentarios", txt_comentario.getText().trim());
            autorizados.put("codigoMacro",param);
            autorizados.put("foto",foto);
            autorizados.put("valFoto",val);
            autorizados.put("id_empresa",id_empresa);
            }
        catch (JSONException e)
            {
             System.err.println("error al crear JSON:"+e.getMessage());  
            }
        return autorizados;
    }
    public void guardarAutorizadoAync(boolean foto)
    {
        if(foto)
        {
            try {
                Thread t = new Autorizado.atSubirImg();
                t.start();
                t.join();
                cuadroDialogo("guardando");
            } catch (InterruptedException ex) {
                Logger.getLogger(Autorizado.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        else
        {
            
        }
        
    }
      public class atSubirImg extends Thread
     {
         public void run()
         {
            try {
            subirImg.subirImg(fichero);
            } catch (IOException ex) {
                Logger.getLogger(Autorizado.class.getName()).log(Level.SEVERE, null, ex);
            } 
         }
     }
      
    public void cuadroDialogo(String mensaje)
    {
          JOptionPane.showMessageDialog(null, mensaje);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Autorizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Autorizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Autorizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Autorizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Autorizado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_documentos;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_huellas;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_btnfoto;
    private javax.swing.JLabel lbl_doc;
    private javax.swing.JLabel lbl_foto;
    private javax.swing.JLabel lbl_guardar;
    private javax.swing.JLabel lbl_huella;
    private javax.swing.JLabel lbl_nuevo;
    private javax.swing.JTable tb_autorizados;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextArea txt_comentario;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_materno;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_paterno;
    // End of variables declaration//GEN-END:variables
}
